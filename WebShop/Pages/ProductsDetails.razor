@page "/product/{id}"
    <div class="container mt-5 text-center text-lg-start  min-height">
    @if (product != null)
    {
      <div class="row align-items-center">
        <div class="col-12 text-center mb-3 card p-2">
          <h2>@product.Name</h2>
        </div>
        <div class="col-12 col-lg-6 mb-3">
           <div class="img-container card p-2 shadow">
                <img src="@product.Img" class="img" alt="Image on @product.Name">
            </div>
        </div>
        <div class="col-12 col-lg-6">
            <div class="card p-2 mb-3">
              <div>
                <h5>Short Description:</h5>
                <p>
                  @product.Short
                </p>
              </div>
              <div class="mt-3">
                <h5>Description:</h5>
                <p>
                  @product.Description
                </p>
              </div>
            </div>
        <div class="card p-2">
          <p>
            <span class="text-danger">@product.Price kr</span>
            <span class="text-muted">inc. tax</span>
          </p>
          <button class="btn btn-primary" @onclick="AddOne">Add To Cart</button>
        </div>
        </div>
      </div>
    }
    </div>

    <style>
        .img{
            display: inline-block;
            max-width: 100%;
            height: auto;
        }
        .img-container {
            display:flex;
            align-items: center;
        }
    </style>

@code {
    [Parameter]
    public string? Id { get; set; }

    public Product? product { get; set; }

    protected override async Task OnInitializedAsync()
    {
        product = await Http.GetFromJsonAsync<Product>($"https://localhost:44332/api/products/{Id}");
    }

    private async Task AddOne()
    {   
       await CartService.AddToCart(product);
    }
}
